# local filesystem : "file:///",
# hdfs filesystem : "hdfs://host"
fs_scheme : "file:///",
verbose : false,

# "gradient_boosting"(default), "random_forest"
type: "gradient_boosting",

data {
    train {
     	data_path : "???",
        max_error_tol : 0
    },

    test {
        data_path : "???",
        max_error_tol : 0,
    },

    delim {
        x_delim : "###",
        y_delim : ",",
        features_delim : ",",
        feature_name_val_delim : ":"
    },

    max_feature_dim: ???,
    # ["0@0.1","1@0.5",...]
    y_sampling : [],
    assigned : false,
    # "files_avg", "lines_avg", "unknown"
    unassigned_mode: "lines_avg"
},

model {
    data_path : "???",
    need_dict : false,
    dict_path : "???",
    dump_freq : -1,
    continue_train: false,
    feature_importance_path: "???",
},

optimization {
    # "data"(distributed), "feature"(local)
    tree_maker: "data",
    # "level", "loss"
    tree_grow_policy: "level",
    round_num: 50,
    max_depth: 7,
    min_child_hessian_sum: 1E-8,
    max_abs_leaf_val: -1,
    min_split_loss: 0,
    min_split_samples: 2000,
    max_leaf_cnt: 128,
    histogram_pool_capacity: -1,

    # "sigmoid"(binary classification), "l1"(regression, mean absolute error), "l2"(regression, mean squared error), "softmax"(multi-class classification)
    loss_function : "sigmoid",
    //sigmoid_zmax: 0,
    //lad_refine_appr: true,

    regularization : {
	learning_rate: 0.09,
	l1 : 0.0,
	l2 : 1.0
    },

    uniform_base_prediction: 0.5,
    sample_dependent_base_prediction: false ,
    instance_sample_rate: 1.0,
    feature_sample_rate: 1.0,
    # regression and binary classification: class_num=1(default), multiclass: class_num>=1, only softmax need to set class_num
    //class_num: 1,
    just_evaluate : false,
    # "auc", "mae", "rmse", "confusion_matrix"
    eval_metric: ["auc"],

    watch_train: false,
    watch_test: false,
},

# feature approximate and missing value config
feature {
    # "mean"(default), "median"
    split_type: "mean",
    approximate: [
        //{cols: "1,2,5,6", type: "sample_by_cnt", max_cnt: 5},
        //{cols: "8,9,10", type: "sample_by_rate", sample_rate: 0.8, min_cnt: 0},
        //{cols: "30,49", type: "sample_by_precision", dot_precision: 5, use_log: true, use_min_max: true},
        //{cols: "cat,dog,4,9,55", type: "no_sample"},
        // {cols: "3", type: "no_sample"},
        {cols: "default", type: "sample_by_quantile", max_cnt: 255, quantile_approximate_bin_factor: 8, use_sample_weight: false, alpha: 1.0},
       ]

    # fill missing value use "mean", "quantile"(or quantile@0.5) or "value"(or value@0)
    missing_value: "value",
    filter_threshold : 0,
}

