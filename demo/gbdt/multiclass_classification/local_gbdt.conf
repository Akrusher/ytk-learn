fs_scheme : "local",
verbose : false,

data {
    train {
        data_path : "demo/gbdt/multiclass_classification/dermatology.train.ytklearn"
        max_error_tol : 0
    },

    test {
        data_path : "demo/gbdt/multiclass_classification/dermatology.test.ytklearn",
        max_error_tol : 0,
    },

    delim {
        x_delim : "###",
        y_delim : ",",
        features_delim : ",",
        feature_name_val_delim : ":"
    },

    max_feature_dim: 33,
    # ["0@0.1","1@0.5",...]
    y_sampling : [],
    assigned : false,
    # "files_avg", "lines_avg" or "unknown"
    unassigned_mode: "lines_avg"
},

model {
    data_path : "demo/gbdt/multiclass_classification/gbdt.model",
    need_dict : "true",
    dict_path : "demo/gbdt/multiclass_classification/feat_dict",
    dump_freq : -1,
    continue_train: false,
    feature_importance_path: "demo/gbdt/multiclass_classification/feature_importance",
},

optimization {
    # "data", "feature"
    tree_maker: "data",
    # "level", "loss"
    tree_grow_policy: "level",
    round_num: 5,
    max_depth: 6,
    min_child_hessian_sum: 1,
    min_split_loss: 0,
    min_split_samples: -1,
    max_leaf_cnt: 128,
    histogram_pool_capacity: -1,

    # "sigmoid"(binary classification), "l1"(regression, mean absolute error), "l2"(regression, mean squared error), "softmax"(multi-class classification)
    loss_function : "softmax",

    regularization : {
        learning_rate: 0.1,
        l1 : 0.0,
        l2 : 1.0
    },

    uniform_base_prediction: 0.0,
    sample_dependent_base_prediction: false ,
    instance_sample_rate: 1.0,
    feature_sample_rate: 1.0,
    # used in multi-class classification, class_num is set to 1 for regression and binary classification by default
    class_num: 6,
    just_evaluate : false,
    # "auc", "mae", "rmse", "confusion_matrix",
    eval_metric: ["confusion_matrix"],
    watch_train: false,
    watch_test: false,
},

# feature approximate and missing value config
feature {
    # "mean", "median"
    split_type: "mean",
    approximate: [
        {cols: "default", type: "no_sample"},
        //{cols: "default", type: "sample_by_quantile", max_cnt: 100},
       ]
    # "mean", "quantile", "value"
    missing_value: "quantile@0.5",
    filter_threshold : 0,
}
